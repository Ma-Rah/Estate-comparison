{"version":3,"sources":["components/header/Header.js","components/main/EstateDetails.js","components/main/MainCard.js","components/main/CardList.js","App.js","index.js"],"names":["Header","className","EstateDetails","props","data","images","name","prize_czk","locality","locality_labels","labels","land_area","building_area","company_logo","company_name","neighborhoodDetails","Object","values","onClick","setDetailedCard","src","alt","garage","parking_lots","furnished","partly_furnished","not_furnished","basin","cellar","wooden","map","label","index","MainCard","priceColor","priceComparison","areaColor","floorComparison","landColor","landComparison","useState","imageIndex","setImageIndex","style","backgroundColor","CardList","list","setList","detailedCard","dataA","setDataA","dataB","setDataB","prevDataA","setPrevDataA","prevDataB","setPrevDataB","setPriceComparison","setFloorComparison","setLandComparison","pageIndex","setPageIndex","a","fetch","response","json","useEffect","fetchList","priceA","priceB","floorAreaA","Number","floorAreaB","landAreaA","landAreaB","length","slice","item","key","name_extracted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b53c671a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"header__title\">Estate Comparison</h1>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","function EstateDetails(props) {\r\n  const {\r\n    images,\r\n    name,\r\n    prize_czk,\r\n    locality,\r\n    locality_labels,\r\n    labels,\r\n    land_area,\r\n    building_area,\r\n    company_logo,\r\n    company_name,\r\n  } = props.data;\r\n\r\n  const neighborhoodDetails = Object.values(locality_labels);\r\n\r\n  return (\r\n    <div className=\"estate\">\r\n      <button\r\n        onClick={() => props.setDetailedCard(null)}\r\n        className=\"main__card--close\"\r\n      >\r\n        <span>Remove</span>\r\n      </button>\r\n      <div className=\"estate__card\">\r\n        {images ? (\r\n          <div className=\"estate__image__container\">\r\n            <img src={images && images[0]} alt={name} />\r\n            <img src={images && images[1]} alt={name} />\r\n            <img src={images && images[2]} alt={name} />\r\n          </div>\r\n        ) : null}{\" \"}\r\n        <div className=\"estate__detail__container\">\r\n          <div className=\"estate__details\">\r\n            <div>{name}</div>\r\n            <div>\r\n              <span className=\"text--bold\">Price</span>\r\n              <span>{prize_czk} CZK</span>\r\n            </div>\r\n            <div className=\"locality\">\r\n              <span className=\"text--bold\">Locality</span>\r\n              <span>{locality}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"text--bold\">Floor area</span>\r\n              <span>{building_area} m²</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"text--bold \">Land area</span>\r\n              <span>{land_area} m²</span>\r\n            </div>\r\n            {labels.garage || labels.parking_lots ? (\r\n              <div>\r\n                <span className=\"text--bold \">Parking</span>\r\n                {labels.garage && \"Garage \"}\r\n                {labels.parking_lots && \"Parking lots \"}{\" \"}\r\n              </div>\r\n            ) : null}\r\n            {labels.furnished ||\r\n            labels.partly_furnished ||\r\n            labels.not_furnished ? (\r\n              <div>\r\n                <span className=\"text--bold \">Furnished</span>\r\n                {labels.furnished && \"Furnished \"}\r\n                {labels.partly_furnished && \"Partly furnished \"}\r\n                {labels.not_furnished && \"Not furnished \"}\r\n              </div>\r\n            ) : null}\r\n            {labels.basin || labels.cellar || labels.wooden ? (\r\n              <div>\r\n                <span className=\"text--bold \">Features</span>\r\n                {labels.basin && \"Basin \"}\r\n                {labels.cellar && \"Cellar \"}\r\n                {labels.wooden && \"Wooden \"}\r\n              </div>\r\n            ) : null}\r\n\r\n            <div>\r\n              <span className=\"text--bold\">Neighborhood</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"neighborhood\">\r\n            {neighborhoodDetails &&\r\n              neighborhoodDetails.map((label, index) => {\r\n                return (\r\n                  <span key={index} className=\"neighborhood__detail\">\r\n                    {label}\r\n                  </span>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className=\"main__card__company\">\r\n          {company_logo ? <img src={company_logo} alt={name} /> : null}\r\n          <p>{company_name}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EstateDetails;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction MainCard(props) {\r\n  const {\r\n    images,\r\n    name,\r\n    prize_czk,\r\n    locality,\r\n    land_area,\r\n    building_area,\r\n    company_logo,\r\n    company_name,\r\n  } = props.data;\r\n\r\n  const {\r\n    priceComparison: priceColor,\r\n    floorComparison: areaColor,\r\n    landComparison: landColor,\r\n  } = props;\r\n\r\n  //    Allow user to go through the images\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n\r\n  // go to next image or set index to first image\r\n  function nextImage() {\r\n    if (imageIndex < 2) {\r\n      setImageIndex(imageIndex + 1);\r\n    } else {\r\n      setImageIndex(0);\r\n    }\r\n  }\r\n  // go to previous image or set index to last image\r\n  function previousImage() {\r\n    if (imageIndex > 0) {\r\n      setImageIndex(imageIndex - 1);\r\n    } else {\r\n      setImageIndex(2);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main__card__image__container\">\r\n        {images ? (\r\n          <div>\r\n            <img src={images && images[imageIndex]} alt={name} />\r\n          </div>\r\n        ) : null}{\" \"}\r\n      </div>\r\n      <div className=\"image__button__container\">\r\n        <span onClick={previousImage} className=\"image__button\">\r\n          ⬅\r\n        </span>\r\n        <span onClick={nextImage} className=\"image__button\">\r\n          ➡\r\n        </span>\r\n      </div>\r\n      <div className=\"main__card__details\">\r\n        <div>{name}</div>\r\n        <div\r\n          style={{\r\n            backgroundColor: priceColor,\r\n          }}\r\n        >\r\n          <span className=\"text--bold\">Price</span>\r\n          <span>{prize_czk} CZK</span>\r\n        </div>\r\n        <div className=\"locality\">\r\n          <span className=\"text--bold\">Locality</span>\r\n          <span>{locality}</span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: areaColor,\r\n          }}\r\n        >\r\n          <span className=\"text--bold\">Floor area</span>\r\n          <span>{building_area} m²</span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: landColor,\r\n          }}\r\n        >\r\n          <span className=\"text--bold \">Land area</span>\r\n          <span>{land_area} m²</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"main__card__company\">\r\n        {company_logo ? <img src={company_logo} alt={name} /> : null}\r\n        <p>{company_name}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport EstateDetails from \"./EstateDetails\";\r\nimport MainCard from \"./MainCard\";\r\n\r\nfunction CardList() {\r\n  // useState section\r\n  const [list, setList] = useState([]);\r\n  const [detailedCard, setDetailedCard] = useState(null);\r\n  const [dataA, setDataA] = useState(null);\r\n  const [dataB, setDataB] = useState(null);\r\n  // Save data for returning to comparison after viewing details\r\n  const [prevDataA, setPrevDataA] = useState(null);\r\n  const [prevDataB, setPrevDataB] = useState(null);\r\n\r\n  // Set color after comparing the values of both estates\r\n  const [priceComparison, setPriceComparison] = useState([\"white\", \"white\"]);\r\n  const [floorComparison, setFloorComparison] = useState([\"white\", \"white\"]);\r\n  const [landComparison, setLandComparison] = useState([\"white\", \"white\"]);\r\n  const [pageIndex, setPageIndex] = useState([0, 10]);\r\n\r\n  // fetch section\r\n  async function fetchList() {\r\n    const url = \"https://estate-comparison.codeboot.cz/list.php\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setList(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dataA && dataB) {\r\n      // convert object strings to numbers for comparison\r\n      let priceA = dataA.prize_czk;\r\n      let priceB = dataB.prize_czk;\r\n      let floorAreaA = Number(dataA.building_area);\r\n      let floorAreaB = Number(dataB.building_area);\r\n      let landAreaA = Number(dataA.land_area);\r\n      let landAreaB = Number(dataB.land_area);\r\n\r\n      // update color to red or green depending on value\r\n      if (priceA === priceB) {\r\n        setPriceComparison([\"white\", \"white\"]);\r\n      } else if (priceA < priceB) {\r\n        setPriceComparison([\"lightgreen\", \"tomato\"]);\r\n      } else {\r\n        setPriceComparison([\"tomato\", \"lightgreen\"]);\r\n      }\r\n\r\n      if (floorAreaA === floorAreaB) {\r\n        setFloorComparison([\"white\", \"white\"]);\r\n      } else if (floorAreaA > floorAreaB) {\r\n        setFloorComparison([\"lightgreen\", \"tomato\"]);\r\n      } else {\r\n        setFloorComparison([\"tomato\", \"lightgreen\"]);\r\n      }\r\n\r\n      if (landAreaA === landAreaB) {\r\n        setLandComparison([\"white\", \"white\"]);\r\n      } else if (landAreaA > landAreaB) {\r\n        setLandComparison([\"lightgreen\", \"tomato\"]);\r\n      } else {\r\n        setLandComparison([\"tomato\", \"lightgreen\"]);\r\n      }\r\n\r\n      setPrevDataA(dataA);\r\n      setPrevDataB(dataB);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [dataA, dataB]);\r\n\r\n  function nextPage() {\r\n    if (pageIndex[1] <= list.length) {\r\n      setPageIndex([pageIndex[0] + 10, pageIndex[1] + 10]);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function previousPage() {\r\n    if (pageIndex[0] >= 10) {\r\n      setPageIndex([pageIndex[0] - 10, pageIndex[1] - 10]);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card__list\">\r\n        <div className=\"card__list__navigation\">\r\n          <div className=\"card__list__update__button\" onClick={previousPage}>\r\n            Previous 10\r\n          </div>\r\n          <div className=\"card__list__update__button\" onClick={nextPage}>\r\n            Next 10\r\n          </div>\r\n        </div>\r\n        <div className=\"card__list__gallery\">\r\n          {list.slice(pageIndex[0], pageIndex[1]).map((item, key) => {\r\n            return (\r\n              <div\r\n                key={key}\r\n                className=\"card__list__item cursor--pointer\"\r\n                onClick={() => {\r\n                  setDetailedCard(null);\r\n                  !dataA ? setDataA(item) : setDataB(item);\r\n                }}\r\n              >\r\n                <img\r\n                  src={item.images[0]}\r\n                  alt={item.name_extracted}\r\n                  className=\"card__list__image\"\r\n                />\r\n                <div className=\"card__list__text\">\r\n                  {item.name_extracted} {item.locality}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {!dataA && !dataB && !detailedCard ? (\r\n          <h2>Select two estates for comparison</h2>\r\n        ) : null}\r\n\r\n        {detailedCard && (\r\n          <button\r\n            onClick={() => {\r\n              setDetailedCard(null);\r\n              setDataA(prevDataA);\r\n              setDataB(prevDataB);\r\n            }}\r\n            className=\"card__list__update__button text--bold\"\r\n          >\r\n            {\" \"}\r\n            Back to comparison{\" \"}\r\n          </button>\r\n        )}\r\n\r\n        <div className=\"main__cards\">\r\n          {dataA ? (\r\n            <div className=\"main__card\">\r\n              <button\r\n                onClick={() => setDataA(null)}\r\n                className=\"main__card--close\"\r\n              >\r\n                Remove\r\n              </button>\r\n              <MainCard\r\n                data={dataA}\r\n                priceComparison={priceComparison[0]}\r\n                floorComparison={floorComparison[0]}\r\n                landComparison={landComparison[0]}\r\n              />{\" \"}\r\n              <button\r\n                className=\"main__card--details\"\r\n                onClick={() => {\r\n                  setDetailedCard(dataA);\r\n                  setDataA(null);\r\n                  setDataB(null);\r\n                }}\r\n              >\r\n                View details\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          {dataB ? (\r\n            <div className=\"main__card\">\r\n              <button\r\n                onClick={() => setDataB(null)}\r\n                className=\"main__card--close\"\r\n              >\r\n                <span>Remove</span>\r\n              </button>\r\n              <MainCard\r\n                data={dataB}\r\n                priceComparison={priceComparison[1]}\r\n                floorComparison={floorComparison[1]}\r\n                landComparison={landComparison[1]}\r\n              />{\" \"}\r\n              <button\r\n                className=\"main__card--details\"\r\n                onClick={() => {\r\n                  setDetailedCard(dataB);\r\n                  setDataA(null);\r\n                  setDataB(null);\r\n                }}\r\n              >\r\n                View details\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          {detailedCard && (\r\n            <EstateDetails\r\n              data={detailedCard}\r\n              setDetailedCard={setDetailedCard}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import Header from \"./components/header/Header\";\r\nimport CardList from \"./components/main/CardList\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<CardList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}